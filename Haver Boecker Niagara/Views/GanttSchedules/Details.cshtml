@model Haver_Boecker_Niagara.Models.GanttSchedule

@{
    ViewData["Title"] = "Gantt Schedule Details";
}

<h1>Gantt Schedule Details</h1>
<hr />
<div class="p-4 shadow-sm card-container mb-3">
    <div class="row">
        <div class="col-md-6">
            <dl class="column">
                <dt>Order Number</dt>
                <dd>@Model.SalesOrder.OrderNumber</dd>
            </dl>
        </div>
        <div class="col-md-6">
            <dl class="column">
                <dt>Customer</dt>
                <dd>@(Model.SalesOrder.Customer?.Name ?? "N/A")</dd>
            </dl>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <dl class="column">
                <dt>Engineer Initials</dt>
                <dd>@string.Join(", ", Model.SalesOrder.EngineeringPackage.Engineers.Select(e => e.Initials))</dd>
            </dl>
        </div>
    </div>
</div>
<div class="p-4 shadow-sm card-container mb-3">
    <h4>Schedule Details</h4>
    <hr />
    <div class="timeline">
        <div class="timeline-item">
            <div class="milestone-dot"></div>
            <div class="timeline-content">
                <strong>Pre-Orders Expected:</strong> @Model.PreOrdersExpected?.ToString("dddd, MMM dd yyyy")
            </div>
        </div>
        <div class="timeline-item">
            <div class="milestone-dot"></div>
            <div class="timeline-content">
                <strong>Readiness to Deliver Expected:</strong> @Model.ReadinessToShipExpected?.ToString("dddd, MMM dd yyyy")
            </div>
        </div>
        <div class="timeline-item">
            <div class="milestone-dot"></div>
            <div class="timeline-content">
                <strong>Promised Date:</strong> @Model.PromiseDate.ToString("dddd, MMM dd yyyy")
            </div>
        </div>
        <div class="timeline-item">
            <div class="milestone-dot"></div>
            <div class="timeline-content">
                <strong>Need-by Date:</strong> @Model.DeadlineDate?.ToString("dddd, MMM dd yyyy")
            </div>
        </div>
    </div>
</div>
<div class="p-4 shadow-sm card-container mb-3">
    <h4>Milestone Progress</h4>
    <hr />

    @{

        var validMilestones = Model.EngineeringOnly
            ? Model.KickoffMeetings?.SelectMany(k => k.Milestones)
        .Where(m => m.Name == Haver_Boecker_Niagara.Models.Task.EngineeringPackage).ToList()
            : Model.KickoffMeetings?.SelectMany(k => k.Milestones).ToList();

        // redundant code?
        // .Where(m => new List<Haver_Boecker_Niagara.Models.Task>
        // {
        //     Haver_Boecker_Niagara.Models.Task.PurchaseOrdersIssued,
        //     Haver_Boecker_Niagara.Models.Task.ApprovalDrawing,
        //     Haver_Boecker_Niagara.Models.Task.PackageReleased,
        //     Haver_Boecker_Niagara.Models.Task.MachineAssembly,
        //     Haver_Boecker_Niagara.Models.Task.MachineTesting,
        //     Haver_Boecker_Niagara.Models.Task.EngineeringReleased
        // }.Contains(m.Name)).ToList();
        var totalMilestones = validMilestones?.Count ?? 0;
        var completedMilestones = validMilestones?.Count(m => m.Status == Haver_Boecker_Niagara.Models.Status.Closed) ?? 0;
        var progressPercentage = totalMilestones > 0 ? (completedMilestones * 100) / totalMilestones : 0;
        //Color change depending on the porcentage.
        var progressColorBar = progressPercentage >= 70 ? "bg-success" :
                               progressPercentage >= 30 ? "bg-warning" : "bg-danger";

    //     @if (totalMilestones > 0)
    //     {
    //         <span>Overall Milestone Progress</span>
    //         <div class="progress mb-3">
    //             <div class="progress-bar @progressColorBar" role="progressbar"
    //                  style="width: @progressPercentage%; background-color: yellow;" aria-valuenow="@progressPercentage"
    //                  aria-valuemin="0" aria-valuemax="100">
    //                 @progressPercentage%
    //             </div>
    //         </div>
    //     }
    }


        @{
            var CalidMilestones = Model.KickoffMeetings?
                .SelectMany(k => k.Milestones)
                .ToList() ?? new List<Haver_Boecker_Niagara.Models.Milestone>();

            var TotalMilestones = validMilestones.Count;
            var CompletedMilestones = validMilestones.Count(m => m.Status == Haver_Boecker_Niagara.Models.Status.Closed);
            var ProgressPercentage = totalMilestones > 0 ? (completedMilestones * 100) / totalMilestones : 0;

            var ProgressColorBar = progressPercentage >= 70 ? "bg-success" :
                                   progressPercentage >= 30 ? "bg-warning" : "bg-danger";
        }
        @if (totalMilestones > 0)
        {

            //Percentiles 
            <div class="d-flex position-relative" style="margin-bottom: 10px;">
                <span class="position-absolute small text-dark one-percentil">0%</span>
                <span class="position-absolute small text-dark thirty-percentil">30%</span>
                <span class="position-absolute small text-dark seventy-percentil ">70%</span>
                <span class="position-absolute small text-dark hundred-percentil">100%</span>
            </div>
            //Progress bar
            <div class="progress mb-3 mt-3" style=" position: relative;">
                <div class="progress-bar @progressColorBar" role="progressbar"
                     style="width: @progressPercentage%;"
                     aria-valuenow="@progressPercentage"
                     aria-valuemin="0" aria-valuemax="100">
                    @progressPercentage%
                </div>
            </div>
        }
        else
        {
            <p>No milestones available.</p>
        }
    @{
        var kickoffMeeting = Model.KickoffMeetings?.FirstOrDefault();
    }
    <!--Lastest kom -->

    

    @if (Model.KickoffMeetings.Count == 0)
    {
        <button type="button" class="btn btn-success mt-3" data-bs-toggle="modal" data-bs-target="#komModal">
            + Create Kickoff Meeting
        </button>
    }
    else
    {
        int i = 0;
        <div class="timeline">
            @foreach (var Kom in Model.KickoffMeetings)
            {
                i++;
                <div class="timeline-item">
                    <div class="timeline-content justify-content-between d-flex">
                        <span class="my-auto"><strong>Kickoff Meeting @i:</strong> @(Kom.Milestones?.Count ?? 0) Milestones</span>
                        <button type="button" value="@Kom.MeetingID" class="addMilestoneBtn btn btn-success mt-3">
                            + Add Milestone
                        </button>
                    </div>
                </div>

            }
            
        </div>
        
    }
   
    <div class="d-flex justify-content-between">
        @foreach (var milestone in validMilestones ?? new List<Haver_Boecker_Niagara.Models.Milestone>())
        {
            var isCompleted = milestone.Status == Haver_Boecker_Niagara.Models.Status.Closed;
            <div class="milestone-dot @(isCompleted ? "completed" : "pending")" title="@milestone.Name"></div>
        }
    </div>
    <div class="timeline">

        <div class="timeline-item">
            <div class="timeline-dot milestone-dot @(ViewData["MilestoneStatus"] != null && (Status)ViewData["MilestoneStatus"] == Status.Open ? "status-open" : "status-closed")">
            </div>
            <div class="timeline-content">
                <strong>Latest Milestone:</strong> @Model.LatestMilestone
            </div>
        </div>
    </div>
</div>
<!--Lastest Kom-->
<div class="p-4 shadow-sm card-container mb-3">
    <hr />
    @if (Model.KickoffMeetings != null && Model.KickoffMeetings.Any())
    {
        <h4>Lastest Kickoff Meetings</h4>

        @foreach (var Kom in Model.KickoffMeetings)
        {
            <div class="card mt-3" id="komMainCard">
                <div class="card-header text-white primary-text-container">
                    Kickoff Meeting - @Kom.MeetingDate.ToString("dddd, dd MMMM, yyyy")
                </div>
                <div class="card-body">
                    <p><strong>Summary:</strong> @Kom.MeetingSummary</p>
                    <p><strong>Milestones:</strong> @Kom.Milestones?.Count()</p>

                    <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#komDetailsModal-@Kom.MeetingID">
                        View Details
                    </button>
                </div>
            </div>

            <div class="modal fade" id="komDetailsModal-@Kom.MeetingID" tabindex="-1" aria-labelledby="komDetailsLabel-@Kom.MeetingID" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="komDetailsLabel-@Kom.MeetingID">Kickoff Meeting Details</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <p><strong>Meeting Date:</strong> @Kom.MeetingDate.ToString("dddd, dd MMMM, yyyy")</p>
                            <p><strong>Meeting Summary:</strong> @Kom.MeetingSummary</p>

                            <h6>Milestones</h6>
                            @if (Kom.Milestones != null && Kom.Milestones.Any())
                            {
                                <ul class="list-group">
                                    @foreach (var milestone in Kom.Milestones)
                                    {
                                        <li class="list-group-item">
                                            <strong>@milestone.Name</strong> - @milestone.Status
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p>No milestones available.</p>
                            }

                        </div>
                    </div>
                </div>
            </div>

        }
    }
    else
    {
        <p>No kickoff meetings available.</p>
    }
</div>

@if (!Model.EngineeringOnly)
{
    <div class="p-4 shadow-sm card-container mb-3">
        <h4>Machine Details</h4>
        <hr />
        <div class="row">
            <div class="col-md-6">
                <dl class="column">
                    <dt>Machine Description</dt>
                    <dd>@Model.SalesOrder.Machines.FirstOrDefault(m => m.MachineID == Model.MachineID)?.MachineDescription</dd>
                </dl>
            </div>
            <div class="col-md-6">
                <dl class="column">
                    <dt>Media</dt>
                    <dd>@Model.SalesOrder.Machines.FirstOrDefault(m => m.MachineID == Model.MachineID)?.Media</dd>
                </dl>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <dl class="column">
                    <dt>Spare Parts</dt>
                    <dd>@Model.SalesOrder.Machines.FirstOrDefault(m => m.MachineID == Model.MachineID)?.SparePartsMedia</dd>
                </dl>
            </div>
            <div class="col-md-6">
                <dl class="column">
                    <dt>Pre-Order Notes</dt>
                    <dd>@Model.SalesOrder.Machines.FirstOrDefault(m => m.MachineID == Model.MachineID)?.PreOrderNotes</dd>
                </dl>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <dl class="column">
                    <dt>Production Notes</dt>
                    <dd>@Model.SalesOrder.Machines.FirstOrDefault(m => m.MachineID == Model.MachineID)?.ScopeNotes</dd>
                </dl>
            </div>
        </div>
    </div>
}
else
{
    <div class="p-4 shadow-sm card-container mb-3">
        <h4>Engineering Only</h4>
        <p>This schedule is for engineering purposes only and is not linked to a specific machine.</p>
    </div>
}

<div class="d-flex justify-content-end gap-2 mt-4">
    <a asp-action="Index" class="btn-primary-close">Close</a>
    <a asp-action="Edit" asp-route-id="@Model?.GanttID" class="btn-edit">Edit</a>
</div>
<partial name="_komModal" model="@new KickoffMeeting {GanttID = Model.GanttID}"/>
<div id="milestoneModalContainer"></div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>

        $(document).ready(function () {
            document.querySelectorAll("button[class*='addMilestoneBtn']").forEach((e) => {e.onclick = 
                function () {
                    let ID = this.value;
                    $.ajax({
                        url: '@Url.Action("GetMilestoneModal", "GanttSchedules")',
                        type: 'GET',
                        data: {id: ID},
                        traditional: true,
                        success: function (data) {
                            $("#milestoneModalContainer").html(data);
                            var modalElement = document.getElementById('milestoneModal');
                            if (modalElement) {
                                var myModal = new bootstrap.Modal(modalElement, {backdrop: 'static'});
                                myModal.show();
                            } else {
                                console.error("Modal element not found!");
                            }
                        },
                        error: function () {
                            alert("Error loading partial view.");
                        }
                    });
                }
            })
        })
        document.addEventListener("DOMContentLoaded", function () {
            let progressBar = document.querySelector(".progress-bar");

            if (progressBar) {
                let progress = progressBar.getAttribute("aria-valuenow");
                progressBar.style.width = progress + "%";
            }
        });
        

    </script>
}

