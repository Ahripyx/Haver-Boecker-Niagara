// <auto-generated />
using System;
using Haver_Boecker_Niagara.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Haver_Boecker_Niagara.Data.FMMigrations
{
    [DbContext(typeof(HaverContext))]
    partial class HaverContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.ApprovalDrawing", b =>
                {
                    b.Property<int>("DrawingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrawingID"));

                    b.Property<DateTime>("IssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrawingID");

                    b.HasIndex("OrderID");

                    b.ToTable("ApprovalDrawings");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.AssemblyLog", b =>
                {
                    b.Property<int>("AssemblyLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssemblyLogID"));

                    b.Property<int?>("ActualAssemblyHours")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssemblyEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AssemblyStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int?>("ReworkHours")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssemblyLogID");

                    b.HasIndex("OrderID");

                    b.ToTable("AssemblyLogs");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.BOM", b =>
                {
                    b.Property<int>("BOM_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BOM_ID"));

                    b.Property<DateTime>("BOM_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("BOM_Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.HasKey("BOM_ID");

                    b.HasIndex("OrderID");

                    b.ToTable("BOMs");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Engineer", b =>
                {
                    b.Property<int>("EngineerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EngineerID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EngineerID");

                    b.ToTable("Engineers");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.GanttSchedule", b =>
                {
                    b.Property<int>("GanttID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GanttID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerID1")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeadlineDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EngineerID")
                        .HasColumnType("int");

                    b.Property<int?>("EngineerID1")
                        .HasColumnType("int");

                    b.Property<string>("MachineDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PromiseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GanttID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("CustomerID1");

                    b.HasIndex("EngineerID");

                    b.HasIndex("EngineerID1");

                    b.ToTable("GanttSchedules");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.KickoffMeeting", b =>
                {
                    b.Property<int>("MeetingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeetingID"));

                    b.Property<string>("KeyDiscussions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("Participants")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeetingID");

                    b.HasIndex("OrderID");

                    b.ToTable("KickoffMeetings");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Milestone", b =>
                {
                    b.Property<int>("MilestoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MilestoneID"));

                    b.Property<DateTime?>("ActualDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<string>("MilestoneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlannedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProjectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MilestoneID");

                    b.HasIndex("OrderID");

                    b.ToTable("Milestones");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.NCR", b =>
                {
                    b.Property<int>("NCR_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NCR_ID"));

                    b.Property<DateTime?>("DateIssued")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NCR_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResolutionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NCR_ID");

                    b.HasIndex("OrderID");

                    b.ToTable("NCRs");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.OperationsSchedule", b =>
                {
                    b.Property<int>("OperarionsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperarionsID"));

                    b.Property<int?>("ActualAssemblyHours")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovalDrawingRelease")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BudgetedAssemblyHours")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerID1")
                        .HasColumnType("int");

                    b.Property<int>("EngineerID")
                        .HasColumnType("int");

                    b.Property<int?>("EngineerID1")
                        .HasColumnType("int");

                    b.Property<string>("ITPRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameplateStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PODueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PackageReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PackagingStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreOrderInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionOrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReworkHours")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OperarionsID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("CustomerID1");

                    b.HasIndex("EngineerID");

                    b.HasIndex("EngineerID1");

                    b.ToTable("OperationsSchedules");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.ProcurementLog", b =>
                {
                    b.Property<int>("ProcurementLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcurementLogID"));

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("PONumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.HasKey("ProcurementLogID");

                    b.HasIndex("OrderID");

                    b.HasIndex("VendorID");

                    b.ToTable("ProcurementLogs");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.ProgressLog", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogID"));

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DoneFlag")
                        .HasColumnType("bit");

                    b.Property<bool>("LateFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("ProgressNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogID");

                    b.HasIndex("OrderID");

                    b.ToTable("ProgressLogs");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.QualityLog", b =>
                {
                    b.Property<int>("QualityLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QualityLogID"));

                    b.Property<string>("IssuesFound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("ProductionOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityChecks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReworkRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QualityLogID");

                    b.HasIndex("OrderID");

                    b.ToTable("QualityLogs");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("VendorID");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.ApprovalDrawing", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.GanttSchedule", "GanttSchedule")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GanttSchedule");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.AssemblyLog", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.OperationsSchedule", "OperationsSchedule")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationsSchedule");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.BOM", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.GanttSchedule", "GanttSchedule")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GanttSchedule");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.GanttSchedule", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Haver_Boecker_Niagara.Models.Customer", null)
                        .WithMany("GanttSchedules")
                        .HasForeignKey("CustomerID1");

                    b.HasOne("Haver_Boecker_Niagara.Models.Engineer", "Engineer")
                        .WithMany()
                        .HasForeignKey("EngineerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Haver_Boecker_Niagara.Models.Engineer", null)
                        .WithMany("GanttSchedules")
                        .HasForeignKey("EngineerID1");

                    b.Navigation("Customer");

                    b.Navigation("Engineer");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.KickoffMeeting", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.GanttSchedule", "GanttSchedule")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GanttSchedule");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Milestone", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.GanttSchedule", "GanttSchedule")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GanttSchedule");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.NCR", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.GanttSchedule", "GanttSchedule")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GanttSchedule");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.OperationsSchedule", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Haver_Boecker_Niagara.Models.Customer", null)
                        .WithMany("OperationsSchedules")
                        .HasForeignKey("CustomerID1");

                    b.HasOne("Haver_Boecker_Niagara.Models.Engineer", "Engineer")
                        .WithMany()
                        .HasForeignKey("EngineerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Haver_Boecker_Niagara.Models.Engineer", null)
                        .WithMany("OperationsSchedules")
                        .HasForeignKey("EngineerID1");

                    b.Navigation("Customer");

                    b.Navigation("Engineer");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.ProcurementLog", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.OperationsSchedule", "OperationsSchedule")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Haver_Boecker_Niagara.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationsSchedule");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.ProgressLog", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.GanttSchedule", "GanttSchedule")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GanttSchedule");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.QualityLog", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.OperationsSchedule", "OperationsSchedule")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationsSchedule");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Customer", b =>
                {
                    b.Navigation("GanttSchedules");

                    b.Navigation("OperationsSchedules");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Engineer", b =>
                {
                    b.Navigation("GanttSchedules");

                    b.Navigation("OperationsSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
