// <auto-generated />
using System;
using Haver_Boecker_Niagara.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Haver_Boecker_Niagara.Data.HaverMigrations
{
    [DbContext(typeof(HaverContext))]
    partial class HaverContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("EngineeringSpeciality", b =>
                {
                    b.Property<int>("EngineeringPackagesEngineeringPackageID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EngineersEngineerID")
                        .HasColumnType("INTEGER");

                    b.HasKey("EngineeringPackagesEngineeringPackageID", "EngineersEngineerID");

                    b.HasIndex("EngineersEngineerID");

                    b.ToTable("EngineeringSpeciality");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactFirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactLastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Engineer", b =>
                {
                    b.Property<int>("EngineerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EngineerID");

                    b.ToTable("Engineers");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.EngineeringPackage", b =>
                {
                    b.Property<int>("EngineeringPackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualApprovalDrawingDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ActualPackageReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ApprovalDrawingDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PackageReleaseDate")
                        .HasColumnType("TEXT");

                    b.HasKey("EngineeringPackageID");

                    b.ToTable("EngineeringPackages");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Machine", b =>
                {
                    b.Property<int>("MachineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InternalPONumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("MachineClass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("MachineSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MachineSizeDesc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SalesOrderID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("MachineID");

                    b.HasIndex("SalesOrderID");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.OperationsSchedule", b =>
                {
                    b.Property<int>("OperationsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActualAssemblyHours")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualReworkHours")
                        .HasColumnType("TEXT");

                    b.Property<string>("BudgetedAssemblyHours")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExtraNotes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("NamePlateStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PreOrderNotes")
                        .HasColumnType("TEXT");

                    b.Property<int>("SalesOrderID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ScopeNotes")
                        .HasColumnType("TEXT");

                    b.HasKey("OperationsID");

                    b.HasIndex("SalesOrderID");

                    b.ToTable("OperationsSchedules");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OperationsID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PODueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PurchaseOrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VendorID")
                        .HasColumnType("INTEGER");

                    b.HasKey("PurchaseOrderID");

                    b.HasIndex("OperationsID");

                    b.HasIndex("VendorID");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.SalesOrder", b =>
                {
                    b.Property<int>("SalesOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AirSeal")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Base")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CoatingOrLining")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Disassembly")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EngineeringPackageID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Media")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<bool>("SparePartsMedia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("SalesOrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("EngineeringPackageID")
                        .IsUnique();

                    b.ToTable("SalesOrders");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactFirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactLastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("VendorID");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("EngineeringSpeciality", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.EngineeringPackage", null)
                        .WithMany()
                        .HasForeignKey("EngineeringPackagesEngineeringPackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Haver_Boecker_Niagara.Models.Engineer", null)
                        .WithMany()
                        .HasForeignKey("EngineersEngineerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Machine", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.SalesOrder", "SalesOrder")
                        .WithMany("Machines")
                        .HasForeignKey("SalesOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesOrder");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.OperationsSchedule", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.SalesOrder", "SalesOrder")
                        .WithMany("OperationsSchedules")
                        .HasForeignKey("SalesOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesOrder");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.PurchaseOrder", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.OperationsSchedule", "OperationsSchedule")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("OperationsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Haver_Boecker_Niagara.Models.Vendor", "Vendor")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationsSchedule");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.SalesOrder", b =>
                {
                    b.HasOne("Haver_Boecker_Niagara.Models.Customer", "Customer")
                        .WithMany("SaleOrders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Haver_Boecker_Niagara.Models.EngineeringPackage", "EngineeringPackage")
                        .WithOne("SalesOrder")
                        .HasForeignKey("Haver_Boecker_Niagara.Models.SalesOrder", "EngineeringPackageID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Customer");

                    b.Navigation("EngineeringPackage");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Customer", b =>
                {
                    b.Navigation("SaleOrders");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.EngineeringPackage", b =>
                {
                    b.Navigation("SalesOrder")
                        .IsRequired();
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.OperationsSchedule", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.SalesOrder", b =>
                {
                    b.Navigation("Machines");

                    b.Navigation("OperationsSchedules");
                });

            modelBuilder.Entity("Haver_Boecker_Niagara.Models.Vendor", b =>
                {
                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
